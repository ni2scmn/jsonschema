# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: R

on:
  push:
    branches: [ "main" , "debug-cicd"]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  check:
    runs-on: ${{ matrix.config.os }}
    name: Test - ${{ matrix.config.os }} - (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: windows-latest, r: 'release'}
          - {os: macOS-latest, r: 'release'}
          - {os: ubuntu-20.04, r: 'release', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}
          # TODO missing libcurl4-openssl-dev
          # Install in pretask?
          - {os: ubuntu-20.04, r: 'devel', rspm: "https://packagemanager.rstudio.com/cran/__linux__/focal/latest"}

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}

    steps:
      - uses: actions/checkout@v3

      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}

      - name: install missing ubuntu deps
        if: ${{ matrix.config.os == 'ubuntu-20.04' && matrix.config.r == 'devel'}}
        run: sudo apt-get install -y libcurl4-openssl-dev

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "covr"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Check
        run: rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}


  codecov:
    runs-on: ubuntu-20.04

    name: Testcoverage

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true

    steps:
      - uses: actions/checkout@v3

      - name: Set up R ${{ matrix.config.r }}
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: release

      # - name: install missing ubuntu deps
      #   if: ${{ matrix.config.os == 'ubuntu-20.04' && matrix.config.r == 'devel'}}
      #   run: sudo apt-get install -y libcurl4-openssl-dev

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "covr"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Test coverage
        run: |
          covr::codecov(
            quiet = FALSE,
            clean = FALSE,
            install_path = file.path(Sys.getenv("RUNNER_TEMP"), "package")
          )
        shell: Rscript {0}

      - name: Show testthat output
        if: always()
        run: |
          ## --------------------------------------------------------------------
          find ${{ runner.temp }}/package -name 'testthat.Rout*' -exec cat '{}' \; || true
        shell: bash

      - name: Upload test results
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-test-failures
          path: ${{ runner.temp }}/package

      - name: Upload covr results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: covr-report
          path: ${{ runner.temp }}/package/covr

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}