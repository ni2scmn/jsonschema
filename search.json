[{"path":"https://ni2scmn.github.io/plumberschema/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Nils Schnakenberg. Author, maintainer.","code":""},{"path":"https://ni2scmn.github.io/plumberschema/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Schnakenberg N (2023). jsonschema: Implementation JSON Schema R. R package version 0.1.0, https://jsonschema.nschnakenberg.eu/.","code":"@Manual{,   title = {jsonschema: Implementation of JSON Schema in R},   author = {Nils Schnakenberg},   year = {2023},   note = {R package version 0.1.0},   url = {https://jsonschema.nschnakenberg.eu/}, }"},{"path":"https://ni2scmn.github.io/plumberschema/index.html","id":"plumberschema","dir":"","previous_headings":"","what":"Implementation of JSON Schema in R","title":"Implementation of JSON Schema in R","text":"goal plumber.schema …","code":""},{"path":"https://ni2scmn.github.io/plumberschema/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Implementation of JSON Schema in R","text":"can install development version plumber.schema GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"ni2scmn/plumberschema\")"},{"path":"https://ni2scmn.github.io/plumberschema/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Implementation of JSON Schema in R","text":"basic example shows solve common problem:","code":"library(plumber.schema) ## basic example code"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_array.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO array — js_array","title":"TODO array — js_array","text":"TODO array","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_array.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO array — js_array","text":"","code":"js_array(   .items,   .min_items = NULL,   .max_items = NULL,   .unique_items = NULL,   ... )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_array.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO array — js_array","text":".items schema component describing array items .min_items minimum item count .max_items maximum item count .unique_items boolean indicating items must unique ... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_boolean.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO boolean — js_boolean","title":"TODO boolean — js_boolean","text":"TODO boolean","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_boolean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO boolean — js_boolean","text":"","code":"js_boolean(...)"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_boolean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO boolean — js_boolean","text":"... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_common_attributes.html","id":null,"dir":"Reference","previous_headings":"","what":"Utility function for common schema keywords — js_common_attributes","title":"Utility function for common schema keywords — js_common_attributes","text":"Utility function common schema keywords","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_common_attributes.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Utility function for common schema keywords — js_common_attributes","text":"","code":"js_common_attributes(   .element,   .title = NULL,   .description = NULL,   .comment = NULL,   .examples = NULL,   .enum = NULL,   .const = NULL,   .default = NULL,   .required = FALSE )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_common_attributes.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Utility function for common schema keywords — js_common_attributes","text":".element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_common_attributes.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Utility function for common schema keywords — js_common_attributes","text":"modified .element","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_integer.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO integer — js_integer","title":"TODO integer — js_integer","text":"TODO integer","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_integer.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO integer — js_integer","text":"","code":"js_integer(   .multiple_of = NULL,   .minimum = NULL,   .maximum = NULL,   .exclusive_minimum = NULL,   .exclusive_maximum = NULL,   ... )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_integer.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO integer — js_integer","text":".multiple_of force component multiple number .minimum inclusive minimum valid value .maximum inclusive maximum valid value .exclusive_minimum exclusive minimum valid value .exclusive_maximum exclusive maximum valid value ... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_null.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO null — js_null","title":"TODO null — js_null","text":"TODO null","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_null.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO null — js_null","text":"","code":"js_null(...)"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_null.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO null — js_null","text":"... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO numeric — js_numeric","title":"TODO numeric — js_numeric","text":"TODO numeric","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO numeric — js_numeric","text":"","code":"js_numeric(   .multiple_of = NULL,   .minimum = NULL,   .maximum = NULL,   .exclusive_minimum = NULL,   .exclusive_maximum = NULL,   ... )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO numeric — js_numeric","text":".multiple_of force component multiple number .minimum inclusive minimum valid value .maximum inclusive maximum valid value .exclusive_minimum exclusive minimum valid value .exclusive_maximum exclusive maximum valid value ... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_object.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO object — js_object","title":"TODO object — js_object","text":"TODO object","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO object — js_object","text":"","code":"js_object(   ...,   .min_properties = NULL,   .max_properties = NULL,   .pattern_properties = NULL,   .additional_properties = NULL )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO object — js_object","text":"... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required .min_properties minimum number properties .max_properties maximum number properties .pattern_properties TODO .additional_properties boolean indicating additional properties allowed","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_string.html","id":null,"dir":"Reference","previous_headings":"","what":"TODO string — js_string","title":"TODO string — js_string","text":"TODO string","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_string.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"TODO string — js_string","text":"","code":"js_string(   .min_length = NULL,   .max_length = NULL,   .pattern = NULL,   .format = c(\"date-time\", \"date\", \"time\", \"duration\", \"email\", \"idn-email\", \"hostname\",     \"idn-hostname\", \"ipv4\", \"ipv6\", \"uuid\", \"uri\", \"uri-reference\", \"iri\",     \"iri-reference\", \"uri-template\", \"json-pointer\", \"relative-json-pointer\", \"regex\"),   ... )"},{"path":"https://ni2scmn.github.io/plumberschema/reference/js_string.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"TODO string — js_string","text":".min_length non negative integer describing minimum length string .max_length non negative integer describing maximum length string .pattern scalar string describing regular expression pattern string must match .format character vector strings describing format string ... Arguments passed js_common_attributes .element js_schema_component .title title schema component .description longer description schema component .comment '$comment' tag internal comments schema component .examples TODO doc .enum restrict element list valid elements .const restrict element constant value must met .default default value component explicitly set .required logical indicating element required","code":""},{"path":"https://ni2scmn.github.io/plumberschema/reference/jsonschema-package.html","id":null,"dir":"Reference","previous_headings":"","what":"jsonschema: Implementation of JSON Schema in R — jsonschema-package","title":"jsonschema: Implementation of JSON Schema in R — jsonschema-package","text":"Implementation JSON Schema R. JSON Schema vocabulary allows annotate validate JSON documents. information JSON Schema , please see https://json-schema.org/.","code":""},{"path":[]},{"path":"https://ni2scmn.github.io/plumberschema/reference/jsonschema-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"jsonschema: Implementation of JSON Schema in R — jsonschema-package","text":"Maintainer: Nils Schnakenberg schnakenberg.nils@gmail.com","code":""}]
